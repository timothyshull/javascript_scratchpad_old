{"version":3,"sources":["exceptions.es6"],"names":[],"mappings":"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","file":"angular2/src/di/exceptions.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ListWrapper,\n  List} from 'angular2/src/facade/collection';\nimport {stringify} from 'angular2/src/facade/lang';\nfunction findFirstClosedCycle(keys) {\n  assert.argumentTypes(keys, List);\n  var res = [];\n  for (var i = 0; i < keys.length; ++i) {\n    if (ListWrapper.contains(res, keys[i])) {\n      ListWrapper.push(res, keys[i]);\n      return assert.returnType((res), List);\n    } else {\n      ListWrapper.push(res, keys[i]);\n    }\n  }\n  return assert.returnType((res), List);\n}\nObject.defineProperty(findFirstClosedCycle, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction constructResolvingPath(keys) {\n  if (keys.length > 1) {\n    var reversed = findFirstClosedCycle(ListWrapper.reversed(keys));\n    var tokenStrs = ListWrapper.map(reversed, (k) => stringify(k.token));\n    return assert.returnType((\" (\" + tokenStrs.join(' -> ') + \")\"), assert.type.string);\n  } else {\n    return assert.returnType((\"\"), assert.type.string);\n  }\n}\nObject.defineProperty(constructResolvingPath, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nexport class AbstractBindingError extends Error {\n  constructor(key, constructResolvingMessage) {\n    assert.argumentTypes(key, assert.type.any, constructResolvingMessage, Function);\n    super();\n    this.keys = [key];\n    this.constructResolvingMessage = constructResolvingMessage;\n    this.message = this.constructResolvingMessage(this.keys);\n  }\n  addKey(key) {\n    ListWrapper.push(this.keys, key);\n    this.message = this.constructResolvingMessage(this.keys);\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nObject.defineProperty(AbstractBindingError, \"parameters\", {get: function() {\n    return [[], [Function]];\n  }});\nexport class NoBindingError extends AbstractBindingError {\n  constructor(key) {\n    super(key, function(keys) {\n      assert.argumentTypes(keys, List);\n      var first = stringify(ListWrapper.first(keys).token);\n      return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n  }\n}\nexport class AsyncBindingError extends AbstractBindingError {\n  constructor(key) {\n    super(key, function(keys) {\n      assert.argumentTypes(keys, List);\n      var first = stringify(ListWrapper.first(keys).token);\n      return `Cannot instantiate ${first} synchronously. ` + `It is provided as a promise!${constructResolvingPath(keys)}`;\n    });\n  }\n}\nexport class CyclicDependencyError extends AbstractBindingError {\n  constructor(key) {\n    super(key, function(keys) {\n      assert.argumentTypes(keys, List);\n      return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n  }\n}\nexport class InstantiationError extends AbstractBindingError {\n  constructor(cause, key) {\n    super(key, function(keys) {\n      assert.argumentTypes(keys, List);\n      var first = stringify(ListWrapper.first(keys).token);\n      return `Error during instantiation of ${first}!${constructResolvingPath(keys)}.` + ` ORIGINAL ERROR: ${cause}`;\n    });\n    this.cause = cause;\n    this.causeKey = key;\n  }\n}\nexport class InvalidBindingError extends Error {\n  constructor(binding) {\n    super();\n    this.message = `Invalid binding ${binding}`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nexport class NoAnnotationError extends Error {\n  constructor(typeOrFunc) {\n    super();\n    this.message = `Cannot resolve all parameters for ${stringify(typeOrFunc)}.` + ` Make sure they all have valid type or annotations.`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\n//# sourceMappingURL=exceptions.js.map\n\n//# sourceMappingURL=./exceptions.map"]}