{"version":3,"sources":["async_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/facade/async_spec.js","sourcesContent":["import {describe,\n  it,\n  expect,\n  beforeEach,\n  ddescribe,\n  iit,\n  xit,\n  el,\n  SpyObject,\n  AsyncTestCompleter,\n  inject,\n  IS_DARTIUM} from 'angular2/test_lib';\nimport {ObservableWrapper,\n  EventEmitter,\n  PromiseWrapper} from 'angular2/src/facade/async';\nexport function main() {\n  describe('EventEmitter', () => {\n    var emitter;\n    beforeEach(() => {\n      emitter = new EventEmitter();\n    });\n    it(\"should call the next callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (value) => {\n        expect(value).toEqual(99);\n        async.done();\n      });\n      ObservableWrapper.callNext(emitter, 99);\n    }));\n    it(\"should call the throw callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (error) => {\n        expect(error).toEqual(\"Boom\");\n        async.done();\n      });\n      ObservableWrapper.callThrow(emitter, \"Boom\");\n    }));\n    it(\"should work when no throw callback is provided\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (_) => {\n        async.done();\n      });\n      ObservableWrapper.callThrow(emitter, \"Boom\");\n    }));\n    it(\"should call the return callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(emitter, (_) => {}, (_) => {}, () => {\n        async.done();\n      });\n      ObservableWrapper.callReturn(emitter);\n    }));\n    it(\"should subscribe to the wrapper asynchronously\", () => {\n      var called = false;\n      ObservableWrapper.subscribe(emitter, (value) => {\n        called = true;\n      });\n      ObservableWrapper.callNext(emitter, 99);\n      expect(called).toBe(false);\n    });\n  });\n}\n//# sourceMappingURL=async_spec.js.map\n\n//# sourceMappingURL=./async_spec.map"]}