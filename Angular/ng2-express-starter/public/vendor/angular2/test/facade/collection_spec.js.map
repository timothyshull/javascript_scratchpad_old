{"version":3,"sources":["collection_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/facade/collection_spec.js","sourcesContent":["import {describe,\n  it,\n  expect,\n  beforeEach,\n  ddescribe,\n  iit,\n  xit} from 'angular2/test_lib';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nexport function main() {\n  describe('ListWrapper', () => {\n    var l;\n    describe('splice', () => {\n      it('should remove sublist of given length and return it', () => {\n        var list = [1, 2, 3, 4, 5, 6];\n        expect(ListWrapper.splice(list, 1, 3)).toEqual([2, 3, 4]);\n        expect(list).toEqual([1, 5, 6]);\n      });\n      it('should support negative start', () => {\n        var list = [1, 2, 3, 4, 5, 6];\n        expect(ListWrapper.splice(list, -5, 3)).toEqual([2, 3, 4]);\n        expect(list).toEqual([1, 5, 6]);\n      });\n    });\n    describe('fill', () => {\n      beforeEach(() => {\n        l = [1, 2, 3, 4];\n      });\n      it('should fill the whole list if neither start nor end are specified', () => {\n        ListWrapper.fill(l, 9);\n        expect(l).toEqual([9, 9, 9, 9]);\n      });\n      it('should fill up to the end if end is not specified', () => {\n        ListWrapper.fill(l, 9, 1);\n        expect(l).toEqual([1, 9, 9, 9]);\n      });\n      it('should support negative start', () => {\n        ListWrapper.fill(l, 9, -1);\n        expect(l).toEqual([1, 2, 3, 9]);\n      });\n      it('should support negative end', () => {\n        ListWrapper.fill(l, 9, -2, -1);\n        expect(l).toEqual([1, 2, 9, 4]);\n      });\n    });\n    describe('slice', () => {\n      beforeEach(() => {\n        l = [1, 2, 3, 4];\n      });\n      it('should return the whole list if neither start nor end are specified', () => {\n        expect(ListWrapper.slice(l)).toEqual([1, 2, 3, 4]);\n      });\n      it('should return up to the end if end is not specified', () => {\n        expect(ListWrapper.slice(l, 1)).toEqual([2, 3, 4]);\n      });\n      it('should support negative start', () => {\n        expect(ListWrapper.slice(l, -1)).toEqual([4]);\n      });\n      it('should support negative end', () => {\n        expect(ListWrapper.slice(l, -3, -1)).toEqual([2, 3]);\n      });\n    });\n  });\n}\n//# sourceMappingURL=collection_spec.js.map\n\n//# sourceMappingURL=./collection_spec.map"]}