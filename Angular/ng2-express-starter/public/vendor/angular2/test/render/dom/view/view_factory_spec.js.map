{"version":3,"sources":["view_factory_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/view/view_factory_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit,\n  SpyObject,\n  proxy} from 'angular2/test_lib';\nimport {IMPLEMENTS,\n  isBlank} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {ViewFactory} from 'angular2/src/render/dom/view/view_factory';\nimport {RenderProtoView} from 'angular2/src/render/dom/view/proto_view';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\nimport {ElementBinder} from 'angular2/src/render/dom/view/element_binder';\nimport {ShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport {LightDom} from 'angular2/src/render/dom/shadow_dom/light_dom';\nimport {EventManager} from 'angular2/src/render/dom/events/event_manager';\nexport function main() {\n  describe('RenderViewFactory', () => {\n    var eventManager;\n    var shadowDomStrategy;\n    function createViewFactory({capacity}) {\n      return assert.returnType((new ViewFactory(capacity, eventManager, shadowDomStrategy)), ViewFactory);\n    }\n    function createProtoView(rootEl = null, binders = null) {\n      if (isBlank(rootEl)) {\n        rootEl = el('<div></div>');\n      }\n      if (isBlank(binders)) {\n        binders = [];\n      }\n      return new RenderProtoView({\n        element: rootEl,\n        elementBinders: binders\n      });\n    }\n    function createComponentElBinder(componentId, nestedProtoView = null) {\n      var binder = new ElementBinder({\n        componentId: componentId,\n        textNodeIndices: []\n      });\n      binder.nestedProtoView = nestedProtoView;\n      return binder;\n    }\n    beforeEach(() => {\n      eventManager = new SpyEventManager();\n      shadowDomStrategy = new SpyShadowDomStrategy();\n    });\n    it('should create views without cache', () => {\n      var pv = createProtoView();\n      var vf = createViewFactory({capacity: 0});\n      expect(vf.getView(pv) instanceof RenderView).toBe(true);\n    });\n    describe('caching', () => {\n      it('should support multiple RenderProtoViews', () => {\n        var pv1 = createProtoView();\n        var pv2 = createProtoView();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv1);\n        var view2 = vf.getView(pv2);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        expect(vf.getView(pv1)).toBe(view1);\n        expect(vf.getView(pv2)).toBe(view2);\n      });\n      it('should reuse the newest view that has been returned', () => {\n        var pv = createProtoView();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        expect(vf.getView(pv)).toBe(view2);\n      });\n      it('should not add views when the capacity has been reached', () => {\n        var pv = createProtoView();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        var view3 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        vf.returnView(view3);\n        expect(vf.getView(pv)).toBe(view2);\n        expect(vf.getView(pv)).toBe(view1);\n      });\n    });\n    describe('child components', () => {\n      var vf,\n          log;\n      beforeEach(() => {\n        vf = createViewFactory({capacity: 1});\n        log = [];\n        shadowDomStrategy.spy('attachTemplate').andCallFake((el, view) => {\n          ListWrapper.push(log, ['attachTemplate', el, view]);\n        });\n        shadowDomStrategy.spy('constructLightDom').andCallFake((lightDomView, shadowDomView, el) => {\n          ListWrapper.push(log, ['constructLightDom', lightDomView, shadowDomView, el]);\n          return new SpyLightDom();\n        });\n      });\n      it('should create static child component views', () => {\n        var hostPv = createProtoView(el('<div><div class=\"ng-binding\"></div></div>'), [createComponentElBinder('someComponent', createProtoView())]);\n        var hostView = vf.getView(hostPv);\n        var shadowView = hostView.componentChildViews[0];\n        expect(shadowView).toBeTruthy();\n        expect(hostView.lightDoms[0]).toBeTruthy();\n        expect(log[0]).toEqual(['constructLightDom', hostView, shadowView, hostView.boundElements[0]]);\n        expect(log[1]).toEqual(['attachTemplate', hostView.boundElements[0], shadowView]);\n      });\n      it('should not create dynamic child component views', () => {\n        var hostPv = createProtoView(el('<div><div class=\"ng-binding\"></div></div>'), [createComponentElBinder('someComponent', null)]);\n        var hostView = vf.getView(hostPv);\n        var shadowView = hostView.componentChildViews[0];\n        expect(shadowView).toBeFalsy();\n        expect(hostView.lightDoms[0]).toBeFalsy();\n        expect(log).toEqual([]);\n      });\n    });\n  });\n}\nclass SpyEventManager extends SpyObject {\n  constructor() {\n    super(EventManager);\n  }\n  noSuchMethod(m) {\n    return super.noSuchMethod(m);\n  }\n}\nObject.defineProperty(SpyEventManager, \"annotations\", {get: function() {\n    return [new proxy, new IMPLEMENTS(EventManager)];\n  }});\nclass SpyShadowDomStrategy extends SpyObject {\n  constructor() {\n    super(ShadowDomStrategy);\n  }\n  noSuchMethod(m) {\n    return super.noSuchMethod(m);\n  }\n}\nObject.defineProperty(SpyShadowDomStrategy, \"annotations\", {get: function() {\n    return [new proxy, new IMPLEMENTS(ShadowDomStrategy)];\n  }});\nclass SpyLightDom extends SpyObject {\n  constructor() {\n    super(LightDom);\n  }\n  noSuchMethod(m) {\n    return super.noSuchMethod(m);\n  }\n}\nObject.defineProperty(SpyLightDom, \"annotations\", {get: function() {\n    return [new proxy, new IMPLEMENTS(LightDom)];\n  }});\n//# sourceMappingURL=view_factory_spec.js.map\n\n//# sourceMappingURL=./view_factory_spec.map"]}