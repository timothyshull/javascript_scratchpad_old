{"version":3,"sources":["main.js"],"names":[],"mappings":";AACA,YAAY,CAAC;AACb,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;IACpB,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAElC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;;;;;;;;;;;;;;;;;AAiBzB,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,CAC1B,IAAI,CAAC,UAAU,IAAI,EAAE;;AAClB,QAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3B,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;CAC7C,CAAC,SACI,CAAC,UAAU,MAAM,EAAE;;;AAErB,WAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;CAC9C,CAAC,CAAC","file":"main-compiled.js","sourcesContent":["/*jshint node: true, esnext: true*/\n'use strict';\nconst fs = require('fs'),\n    Promise = require('bluebird');\n\nPromise.promisifyAll(fs);\n\n//fs.readFile('config.json',\n//    function (error, text) {\n//        if (error) {\n//            console.error('Error while reading config file');\n//        } else {\n//            try {\n//                let obj = JSON.parse(text);\n//                console.log(JSON.stringify(obj, null, 4));\n//            } catch (e) {\n//                console.error('Invalid JSON in file');\n//            }\n//        }\n//    }\n//);\n\nfs.readFileAsync('config.json')\n    .then(function (text) { // (A)\n        let obj = JSON.parse(text);\n        console.log(JSON.stringify(obj, null, 4));\n    })\n    .catch(function (reason) { // (B)\n        // File read error or JSON SyntaxError\n        console.error('An error occurred', reason);\n    });\n"]}